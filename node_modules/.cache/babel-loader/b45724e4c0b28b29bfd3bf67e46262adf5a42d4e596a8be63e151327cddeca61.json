{"ast":null,"code":"/**\n * @license\n * Copyright 2016 Google Inc. All Rights Reserved.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nvar CircularBuffer = require('./circular-buffer');\nvar Task = require('./task');\nexports.inject = function (wait, getTime) {\n  return {\n    /**\n     * Creates a ThrottledQueue. The queue stores tasks, which will be executed\n     * asynchronously, at a controlled rate.\n     *\n     * @param {number} limit The maximum number of tasks that can be executed\n     *     over one period.\n     * @param {number} period The time period (ms) over which limit is\n     *     enforceable.\n     * @return {ThrottledQueue}\n     */\n    create: function (limit, period) {\n      var me = {};\n      var queue = Task.withValue();\n      var recentTimes = CircularBuffer.create(limit);\n\n      /**\n       * Adds a task to the work queue.\n       *\n       * @param {function(): Task<T>} doSomething Starts the task. This function\n       *     will be called when the rate limit allows.\n       * @return {Task<T>} The delayed task.\n       * @template T\n       */\n      me.add = function (doSomething) {\n        // Return a separate task from the queue, so that cancelling a task\n        // doesn't propagate back and cancel the whole queue.\n        var waitForMyTurn = Task.start(function (resolve) {\n          queue.finally(resolve);\n        }).thenDo(function () {\n          var lastTime = recentTimes.item(limit - 1);\n          if (lastTime == undefined) return;\n          return wait(Math.max(lastTime + period - getTime(), 0));\n        }).thenDo(function () {\n          recentTimes.insert(getTime());\n        });\n        queue = queue.thenDo(function () {\n          return Task.start(function (resolve) {\n            waitForMyTurn.finally(resolve);\n          });\n        });\n        return waitForMyTurn.thenDo(doSomething);\n      };\n      return me;\n    }\n  };\n};","map":{"version":3,"names":["CircularBuffer","require","Task","exports","inject","wait","getTime","create","limit","period","me","queue","withValue","recentTimes","add","doSomething","waitForMyTurn","start","resolve","finally","thenDo","lastTime","item","undefined","Math","max","insert"],"sources":["/home/vanshgoel/Downloads/ecohealth-react/node_modules/.pnpm/@google+maps@1.1.3/node_modules/@google/maps/lib/internal/throttled-queue.js"],"sourcesContent":["/**\n * @license\n * Copyright 2016 Google Inc. All Rights Reserved.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nvar CircularBuffer = require('./circular-buffer');\nvar Task = require('./task');\n\nexports.inject = function(wait, getTime) {\n  return {\n    /**\n     * Creates a ThrottledQueue. The queue stores tasks, which will be executed\n     * asynchronously, at a controlled rate.\n     *\n     * @param {number} limit The maximum number of tasks that can be executed\n     *     over one period.\n     * @param {number} period The time period (ms) over which limit is\n     *     enforceable.\n     * @return {ThrottledQueue}\n     */\n    create: function(limit, period) {\n      var me = {};\n      var queue = Task.withValue();\n      var recentTimes = CircularBuffer.create(limit);\n\n      /**\n       * Adds a task to the work queue.\n       *\n       * @param {function(): Task<T>} doSomething Starts the task. This function\n       *     will be called when the rate limit allows.\n       * @return {Task<T>} The delayed task.\n       * @template T\n       */\n      me.add = function(doSomething) {\n        // Return a separate task from the queue, so that cancelling a task\n        // doesn't propagate back and cancel the whole queue.\n        var waitForMyTurn = Task\n            .start(function(resolve) {\n              queue.finally(resolve);\n            })\n            .thenDo(function() {\n              var lastTime = recentTimes.item(limit - 1);\n              if (lastTime == undefined) return;\n              return wait(Math.max(lastTime + period - getTime(), 0));\n            })\n            .thenDo(function() {\n              recentTimes.insert(getTime());\n            });\n\n        queue = queue.thenDo(function() {\n          return Task.start(function(resolve) {\n            waitForMyTurn.finally(resolve);\n          });\n        });\n\n        return waitForMyTurn.thenDo(doSomething);\n      };\n\n      return me;\n    }\n  };\n};\n"],"mappings":"AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA,IAAIA,cAAc,GAAGC,OAAO,CAAC,mBAAmB,CAAC;AACjD,IAAIC,IAAI,GAAGD,OAAO,CAAC,QAAQ,CAAC;AAE5BE,OAAO,CAACC,MAAM,GAAG,UAASC,IAAI,EAAEC,OAAO,EAAE;EACvC,OAAO;IACL;AACJ;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;IACIC,MAAM,EAAE,SAAAA,CAASC,KAAK,EAAEC,MAAM,EAAE;MAC9B,IAAIC,EAAE,GAAG,CAAC,CAAC;MACX,IAAIC,KAAK,GAAGT,IAAI,CAACU,SAAS,CAAC,CAAC;MAC5B,IAAIC,WAAW,GAAGb,cAAc,CAACO,MAAM,CAACC,KAAK,CAAC;;MAE9C;AACN;AACA;AACA;AACA;AACA;AACA;AACA;MACME,EAAE,CAACI,GAAG,GAAG,UAASC,WAAW,EAAE;QAC7B;QACA;QACA,IAAIC,aAAa,GAAGd,IAAI,CACnBe,KAAK,CAAC,UAASC,OAAO,EAAE;UACvBP,KAAK,CAACQ,OAAO,CAACD,OAAO,CAAC;QACxB,CAAC,CAAC,CACDE,MAAM,CAAC,YAAW;UACjB,IAAIC,QAAQ,GAAGR,WAAW,CAACS,IAAI,CAACd,KAAK,GAAG,CAAC,CAAC;UAC1C,IAAIa,QAAQ,IAAIE,SAAS,EAAE;UAC3B,OAAOlB,IAAI,CAACmB,IAAI,CAACC,GAAG,CAACJ,QAAQ,GAAGZ,MAAM,GAAGH,OAAO,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC;QACzD,CAAC,CAAC,CACDc,MAAM,CAAC,YAAW;UACjBP,WAAW,CAACa,MAAM,CAACpB,OAAO,CAAC,CAAC,CAAC;QAC/B,CAAC,CAAC;QAENK,KAAK,GAAGA,KAAK,CAACS,MAAM,CAAC,YAAW;UAC9B,OAAOlB,IAAI,CAACe,KAAK,CAAC,UAASC,OAAO,EAAE;YAClCF,aAAa,CAACG,OAAO,CAACD,OAAO,CAAC;UAChC,CAAC,CAAC;QACJ,CAAC,CAAC;QAEF,OAAOF,aAAa,CAACI,MAAM,CAACL,WAAW,CAAC;MAC1C,CAAC;MAED,OAAOL,EAAE;IACX;EACF,CAAC;AACH,CAAC"},"metadata":{},"sourceType":"script","externalDependencies":[]}