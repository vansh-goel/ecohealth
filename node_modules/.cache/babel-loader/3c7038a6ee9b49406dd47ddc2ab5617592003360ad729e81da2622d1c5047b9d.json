{"ast":null,"code":"var _jsxFileName = \"/home/vanshgoel/Downloads/ecohealth-react/src/views/map.js\",\n  _s = $RefreshSig$();\nimport React from 'react';\nimport { GoogleMap, LoadScript } from '@google/maps';\nimport { PlacesService } from '@google/maps/services/places'; // Import PlacesService\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst GreenspaceMap = () => {\n  _s();\n  const [greenspaces, setGreenspaces] = useState([]);\n  useEffect(() => {\n    // Fetch greenspaces data using Places API\n    const fetchGreenspaces = async () => {\n      const service = new PlacesService(); // Create PlacesService instance\n      const request = {\n        query: 'Greenspaces in Atlanta'\n      };\n      const results = await service.textSearch(request);\n      const greenspaceData = results.map(place => {\n        return {\n          name: place.name,\n          address: place.formatted_address,\n          coordinates: {\n            lat: place.geometry.location.lat(),\n            lng: place.geometry.location.lng()\n          }\n        };\n      });\n      setGreenspaces(greenspaceData);\n    };\n    fetchGreenspaces();\n  }, []);\n  const mapOptions = {\n    zoom: 10,\n    center: {\n      lat: 33.75,\n      lng: -84.38\n    }\n  };\n  const markers = greenspaces.map(greenspace => {\n    return new google.maps.Marker({\n      position: greenspace.coordinates,\n      title: greenspace.name,\n      content: greenspace.address\n    });\n  });\n  return /*#__PURE__*/_jsxDEV(LoadScript, {\n    googleMapsApiKey: \"AlzaSyDKnPQXQqgwlThYL2om8dykd12QHd6d9gY\",\n    libraries: ['places'],\n    children: googleMaps => /*#__PURE__*/_jsxDEV(GoogleMap, {\n      mapContainerStyle: {\n        width: '100%',\n        height: '400px'\n      },\n      options: mapOptions,\n      children: markers\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 53,\n      columnNumber: 9\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 48,\n    columnNumber: 5\n  }, this);\n};\n_s(GreenspaceMap, \"UNGgoqgtqVbNFuXHfvmyv9TV66Y=\");\n_c = GreenspaceMap;\nexport default GreenspaceMap;\nvar _c;\n$RefreshReg$(_c, \"GreenspaceMap\");","map":{"version":3,"names":["React","GoogleMap","LoadScript","PlacesService","jsxDEV","_jsxDEV","GreenspaceMap","_s","greenspaces","setGreenspaces","useState","useEffect","fetchGreenspaces","service","request","query","results","textSearch","greenspaceData","map","place","name","address","formatted_address","coordinates","lat","geometry","location","lng","mapOptions","zoom","center","markers","greenspace","google","maps","Marker","position","title","content","googleMapsApiKey","libraries","children","googleMaps","mapContainerStyle","width","height","options","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["/home/vanshgoel/Downloads/ecohealth-react/src/views/map.js"],"sourcesContent":["import React from 'react';\nimport { GoogleMap, LoadScript } from '@google/maps';\nimport { PlacesService } from '@google/maps/services/places'; // Import PlacesService\n\nconst GreenspaceMap = () => {\n  const [greenspaces, setGreenspaces] = useState([]);\n\n  useEffect(() => {\n    // Fetch greenspaces data using Places API\n    const fetchGreenspaces = async () => {\n      const service = new PlacesService(); // Create PlacesService instance\n      const request = {\n        query: 'Greenspaces in Atlanta',\n      };\n\n      const results = await service.textSearch(request);\n      const greenspaceData = results.map((place) => {\n        return {\n          name: place.name,\n          address: place.formatted_address,\n          coordinates: {\n            lat: place.geometry.location.lat(),\n            lng: place.geometry.location.lng(),\n          },\n        };\n      });\n\n      setGreenspaces(greenspaceData);\n    };\n\n    fetchGreenspaces();\n  }, []);\n\n  const mapOptions = {\n    zoom: 10,\n    center: { lat: 33.75, lng: -84.38 },\n  };\n\n  const markers = greenspaces.map((greenspace) => {\n    return new google.maps.Marker({\n      position: greenspace.coordinates,\n      title: greenspace.name,\n      content: greenspace.address,\n    });\n  });\n\n  return (\n    <LoadScript\n      googleMapsApiKey=\"AlzaSyDKnPQXQqgwlThYL2om8dykd12QHd6d9gY\"\n      libraries={['places']}\n    >\n      {(googleMaps) => (\n        <GoogleMap\n          mapContainerStyle={{ width: '100%', height: '400px' }}\n          options={mapOptions}\n        >\n          {markers}\n        </GoogleMap>\n      )}\n    </LoadScript>\n  );\n};\n\nexport default GreenspaceMap;\n"],"mappings":";;AAAA,OAAOA,KAAK,MAAM,OAAO;AACzB,SAASC,SAAS,EAAEC,UAAU,QAAQ,cAAc;AACpD,SAASC,aAAa,QAAQ,8BAA8B,CAAC,CAAC;AAAA,SAAAC,MAAA,IAAAC,OAAA;AAE9D,MAAMC,aAAa,GAAGA,CAAA,KAAM;EAAAC,EAAA;EAC1B,MAAM,CAACC,WAAW,EAAEC,cAAc,CAAC,GAAGC,QAAQ,CAAC,EAAE,CAAC;EAElDC,SAAS,CAAC,MAAM;IACd;IACA,MAAMC,gBAAgB,GAAG,MAAAA,CAAA,KAAY;MACnC,MAAMC,OAAO,GAAG,IAAIV,aAAa,CAAC,CAAC,CAAC,CAAC;MACrC,MAAMW,OAAO,GAAG;QACdC,KAAK,EAAE;MACT,CAAC;MAED,MAAMC,OAAO,GAAG,MAAMH,OAAO,CAACI,UAAU,CAACH,OAAO,CAAC;MACjD,MAAMI,cAAc,GAAGF,OAAO,CAACG,GAAG,CAAEC,KAAK,IAAK;QAC5C,OAAO;UACLC,IAAI,EAAED,KAAK,CAACC,IAAI;UAChBC,OAAO,EAAEF,KAAK,CAACG,iBAAiB;UAChCC,WAAW,EAAE;YACXC,GAAG,EAAEL,KAAK,CAACM,QAAQ,CAACC,QAAQ,CAACF,GAAG,CAAC,CAAC;YAClCG,GAAG,EAAER,KAAK,CAACM,QAAQ,CAACC,QAAQ,CAACC,GAAG,CAAC;UACnC;QACF,CAAC;MACH,CAAC,CAAC;MAEFnB,cAAc,CAACS,cAAc,CAAC;IAChC,CAAC;IAEDN,gBAAgB,CAAC,CAAC;EACpB,CAAC,EAAE,EAAE,CAAC;EAEN,MAAMiB,UAAU,GAAG;IACjBC,IAAI,EAAE,EAAE;IACRC,MAAM,EAAE;MAAEN,GAAG,EAAE,KAAK;MAAEG,GAAG,EAAE,CAAC;IAAM;EACpC,CAAC;EAED,MAAMI,OAAO,GAAGxB,WAAW,CAACW,GAAG,CAAEc,UAAU,IAAK;IAC9C,OAAO,IAAIC,MAAM,CAACC,IAAI,CAACC,MAAM,CAAC;MAC5BC,QAAQ,EAAEJ,UAAU,CAACT,WAAW;MAChCc,KAAK,EAAEL,UAAU,CAACZ,IAAI;MACtBkB,OAAO,EAAEN,UAAU,CAACX;IACtB,CAAC,CAAC;EACJ,CAAC,CAAC;EAEF,oBACEjB,OAAA,CAACH,UAAU;IACTsC,gBAAgB,EAAC,yCAAyC;IAC1DC,SAAS,EAAE,CAAC,QAAQ,CAAE;IAAAC,QAAA,EAEpBC,UAAU,iBACVtC,OAAA,CAACJ,SAAS;MACR2C,iBAAiB,EAAE;QAAEC,KAAK,EAAE,MAAM;QAAEC,MAAM,EAAE;MAAQ,CAAE;MACtDC,OAAO,EAAElB,UAAW;MAAAa,QAAA,EAEnBV;IAAO;MAAAgB,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACC;EACZ;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACS,CAAC;AAEjB,CAAC;AAAC5C,EAAA,CAzDID,aAAa;AAAA8C,EAAA,GAAb9C,aAAa;AA2DnB,eAAeA,aAAa;AAAC,IAAA8C,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}