{"ast":null,"code":"/**\n * @license\n * Copyright 2016 Google Inc. All Rights Reserved.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */;\nvar utils = require('../internal/convert');\nvar v = require('../internal/validate');\n\n/**\n * Makes an elevation request.\n *\n * @memberof! GoogleMapsClient\n * @name GoogleMapsClient.elevation\n * @function\n * @param {Object} query\n * @param {LatLng[]} query.locations\n * @param {ResponseCallback} callback Callback function for handling the result\n * @return {RequestHandle}\n */\nexports.elevation = {\n  url: 'https://maps.googleapis.com/maps/api/elevation/json',\n  validator: v.object({\n    locations: utils.arrayOf(utils.latLng),\n    retryOptions: v.optional(utils.retryOptions),\n    timeout: v.optional(v.number)\n  })\n};\n\n/**\n * Makes an elevation-along-path request.\n *\n * @memberof! GoogleMapsClient\n * @name GoogleMapsClient.elevationAlongPath\n * @function\n * @param {Object} query\n * @param {LatLng[]|string} query.path\n * @param {number} query.samples\n * @param {ResponseCallback} callback Callback function for handling the result\n * @return {RequestHandle}\n */\nexports.elevationAlongPath = {\n  url: 'https://maps.googleapis.com/maps/api/elevation/json',\n  validator: v.object({\n    path: function (path) {\n      if (typeof path == 'string') {\n        return 'enc:' + path;\n      } else {\n        return utils.arrayOf(utils.latLng)(path);\n      }\n    },\n    samples: v.number,\n    retryOptions: v.optional(utils.retryOptions),\n    timeout: v.optional(v.number)\n  })\n};","map":{"version":3,"names":["utils","require","v","exports","elevation","url","validator","object","locations","arrayOf","latLng","retryOptions","optional","timeout","number","elevationAlongPath","path","samples"],"sources":["/home/vanshgoel/Downloads/ecohealth-react/node_modules/.pnpm/@google+maps@1.1.3/node_modules/@google/maps/lib/apis/elevation.js"],"sourcesContent":["/**\n * @license\n * Copyright 2016 Google Inc. All Rights Reserved.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */;\n\nvar utils = require('../internal/convert');\nvar v = require('../internal/validate');\n\n/**\n * Makes an elevation request.\n *\n * @memberof! GoogleMapsClient\n * @name GoogleMapsClient.elevation\n * @function\n * @param {Object} query\n * @param {LatLng[]} query.locations\n * @param {ResponseCallback} callback Callback function for handling the result\n * @return {RequestHandle}\n */\nexports.elevation = {\n  url: 'https://maps.googleapis.com/maps/api/elevation/json',\n  validator: v.object({\n    locations: utils.arrayOf(utils.latLng),\n    retryOptions: v.optional(utils.retryOptions),\n    timeout: v.optional(v.number)\n  })\n};\n\n/**\n * Makes an elevation-along-path request.\n *\n * @memberof! GoogleMapsClient\n * @name GoogleMapsClient.elevationAlongPath\n * @function\n * @param {Object} query\n * @param {LatLng[]|string} query.path\n * @param {number} query.samples\n * @param {ResponseCallback} callback Callback function for handling the result\n * @return {RequestHandle}\n */\nexports.elevationAlongPath = {\n  url: 'https://maps.googleapis.com/maps/api/elevation/json',\n  validator: v.object({\n    path: function(path) {\n      if (typeof path == 'string') {\n        return 'enc:' + path;\n      } else {\n        return utils.arrayOf(utils.latLng)(path);\n      }\n    },\n    samples: v.number,\n    retryOptions: v.optional(utils.retryOptions),\n    timeout: v.optional(v.number)\n  })\n};\n"],"mappings":"AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,GAAG;AAEH,IAAIA,KAAK,GAAGC,OAAO,CAAC,qBAAqB,CAAC;AAC1C,IAAIC,CAAC,GAAGD,OAAO,CAAC,sBAAsB,CAAC;;AAEvC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACAE,OAAO,CAACC,SAAS,GAAG;EAClBC,GAAG,EAAE,qDAAqD;EAC1DC,SAAS,EAAEJ,CAAC,CAACK,MAAM,CAAC;IAClBC,SAAS,EAAER,KAAK,CAACS,OAAO,CAACT,KAAK,CAACU,MAAM,CAAC;IACtCC,YAAY,EAAET,CAAC,CAACU,QAAQ,CAACZ,KAAK,CAACW,YAAY,CAAC;IAC5CE,OAAO,EAAEX,CAAC,CAACU,QAAQ,CAACV,CAAC,CAACY,MAAM;EAC9B,CAAC;AACH,CAAC;;AAED;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACAX,OAAO,CAACY,kBAAkB,GAAG;EAC3BV,GAAG,EAAE,qDAAqD;EAC1DC,SAAS,EAAEJ,CAAC,CAACK,MAAM,CAAC;IAClBS,IAAI,EAAE,SAAAA,CAASA,IAAI,EAAE;MACnB,IAAI,OAAOA,IAAI,IAAI,QAAQ,EAAE;QAC3B,OAAO,MAAM,GAAGA,IAAI;MACtB,CAAC,MAAM;QACL,OAAOhB,KAAK,CAACS,OAAO,CAACT,KAAK,CAACU,MAAM,CAAC,CAACM,IAAI,CAAC;MAC1C;IACF,CAAC;IACDC,OAAO,EAAEf,CAAC,CAACY,MAAM;IACjBH,YAAY,EAAET,CAAC,CAACU,QAAQ,CAACZ,KAAK,CAACW,YAAY,CAAC;IAC5CE,OAAO,EAAEX,CAAC,CAACU,QAAQ,CAACV,CAAC,CAACY,MAAM;EAC9B,CAAC;AACH,CAAC"},"metadata":{},"sourceType":"script","externalDependencies":[]}