{"ast":null,"code":"/**\n * @license\n * Copyright 2016 Google Inc. All Rights Reserved.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */;\nvar utils = require('../internal/convert');\nvar v = require('../internal/validate');\n\n/**\n * Makes a geocode request.\n *\n * @memberof! GoogleMapsClient\n * @name GoogleMapsClient.geocode\n * @function\n * @param {Object} query\n * @param {string} [query.address]\n * @param {Object} [query.components]\n * @param {Object} [query.bounds]\n * @param {number} query.bounds.south\n * @param {number} query.bounds.west\n * @param {number} query.bounds.north\n * @param {number} query.bounds.east\n * @param {string} [query.region]\n * @param {string} [query.language]\n * @param {ResponseCallback} callback Callback function for handling the result\n * @return {RequestHandle}\n */\nexports.geocode = {\n  url: 'https://maps.googleapis.com/maps/api/geocode/json',\n  validator: v.object({\n    address: v.optional(v.string),\n    components: v.optional(utils.pipedKeyValues),\n    bounds: v.optional(utils.bounds),\n    region: v.optional(v.string),\n    language: v.optional(v.string),\n    retryOptions: v.optional(utils.retryOptions),\n    timeout: v.optional(v.number)\n  })\n};\n\n/**\n * Makes a reverse geocode request.\n *\n * @memberof! GoogleMapsClient\n * @name GoogleMapsClient.reverseGeocode\n * @function\n * @param {Object} query\n * @param {LatLng} [query.latlng]\n * @param {string} [query.place_id]\n * @param {string} [query.result_type]\n * @param {string} [query.location_type]\n * @param {string} [query.language]\n * @param {ResponseCallback} callback Callback function for handling the result\n * @return {RequestHandle}\n */\nexports.reverseGeocode = {\n  url: 'https://maps.googleapis.com/maps/api/geocode/json',\n  validator: v.compose([v.mutuallyExclusiveProperties(['place_id', 'latlng']), v.mutuallyExclusiveProperties(['place_id', 'result_type']), v.mutuallyExclusiveProperties(['place_id', 'location_type']), v.object({\n    latlng: v.optional(utils.latLng),\n    place_id: v.optional(v.string),\n    result_type: v.optional(utils.arrayOf(v.string)),\n    location_type: v.optional(utils.arrayOf(v.oneOf(['ROOFTOP', 'RANGE_INTERPOLATED', 'GEOMETRIC_CENTER', 'APPROXIMATE']))),\n    language: v.optional(v.string),\n    retryOptions: v.optional(utils.retryOptions),\n    timeout: v.optional(v.number)\n  })])\n};","map":{"version":3,"names":["utils","require","v","exports","geocode","url","validator","object","address","optional","string","components","pipedKeyValues","bounds","region","language","retryOptions","timeout","number","reverseGeocode","compose","mutuallyExclusiveProperties","latlng","latLng","place_id","result_type","arrayOf","location_type","oneOf"],"sources":["/home/vanshgoel/Downloads/ecohealth-react/node_modules/.pnpm/@google+maps@1.1.3/node_modules/@google/maps/lib/apis/geocode.js"],"sourcesContent":["/**\n * @license\n * Copyright 2016 Google Inc. All Rights Reserved.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */;\n\nvar utils = require('../internal/convert');\nvar v = require('../internal/validate');\n\n/**\n * Makes a geocode request.\n *\n * @memberof! GoogleMapsClient\n * @name GoogleMapsClient.geocode\n * @function\n * @param {Object} query\n * @param {string} [query.address]\n * @param {Object} [query.components]\n * @param {Object} [query.bounds]\n * @param {number} query.bounds.south\n * @param {number} query.bounds.west\n * @param {number} query.bounds.north\n * @param {number} query.bounds.east\n * @param {string} [query.region]\n * @param {string} [query.language]\n * @param {ResponseCallback} callback Callback function for handling the result\n * @return {RequestHandle}\n */\nexports.geocode = {\n  url: 'https://maps.googleapis.com/maps/api/geocode/json',\n  validator: v.object({\n    address: v.optional(v.string),\n    components: v.optional(utils.pipedKeyValues),\n    bounds: v.optional(utils.bounds),\n    region: v.optional(v.string),\n    language: v.optional(v.string),\n    retryOptions: v.optional(utils.retryOptions),\n    timeout: v.optional(v.number)\n  })\n};\n\n/**\n * Makes a reverse geocode request.\n *\n * @memberof! GoogleMapsClient\n * @name GoogleMapsClient.reverseGeocode\n * @function\n * @param {Object} query\n * @param {LatLng} [query.latlng]\n * @param {string} [query.place_id]\n * @param {string} [query.result_type]\n * @param {string} [query.location_type]\n * @param {string} [query.language]\n * @param {ResponseCallback} callback Callback function for handling the result\n * @return {RequestHandle}\n */\nexports.reverseGeocode = {\n  url: 'https://maps.googleapis.com/maps/api/geocode/json',\n  validator: v.compose([\n    v.mutuallyExclusiveProperties(['place_id', 'latlng']),\n    v.mutuallyExclusiveProperties(['place_id', 'result_type']),\n    v.mutuallyExclusiveProperties(['place_id', 'location_type']),\n    v.object({\n      latlng: v.optional(utils.latLng),\n      place_id: v.optional(v.string),\n      result_type: v.optional(utils.arrayOf(v.string)),\n      location_type: v.optional(utils.arrayOf(v.oneOf([\n        'ROOFTOP', 'RANGE_INTERPOLATED', 'GEOMETRIC_CENTER', 'APPROXIMATE'\n      ]))),\n      language: v.optional(v.string),\n      retryOptions: v.optional(utils.retryOptions),\n      timeout: v.optional(v.number)\n    })\n  ])\n};\n"],"mappings":"AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,GAAG;AAEH,IAAIA,KAAK,GAAGC,OAAO,CAAC,qBAAqB,CAAC;AAC1C,IAAIC,CAAC,GAAGD,OAAO,CAAC,sBAAsB,CAAC;;AAEvC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACAE,OAAO,CAACC,OAAO,GAAG;EAChBC,GAAG,EAAE,mDAAmD;EACxDC,SAAS,EAAEJ,CAAC,CAACK,MAAM,CAAC;IAClBC,OAAO,EAAEN,CAAC,CAACO,QAAQ,CAACP,CAAC,CAACQ,MAAM,CAAC;IAC7BC,UAAU,EAAET,CAAC,CAACO,QAAQ,CAACT,KAAK,CAACY,cAAc,CAAC;IAC5CC,MAAM,EAAEX,CAAC,CAACO,QAAQ,CAACT,KAAK,CAACa,MAAM,CAAC;IAChCC,MAAM,EAAEZ,CAAC,CAACO,QAAQ,CAACP,CAAC,CAACQ,MAAM,CAAC;IAC5BK,QAAQ,EAAEb,CAAC,CAACO,QAAQ,CAACP,CAAC,CAACQ,MAAM,CAAC;IAC9BM,YAAY,EAAEd,CAAC,CAACO,QAAQ,CAACT,KAAK,CAACgB,YAAY,CAAC;IAC5CC,OAAO,EAAEf,CAAC,CAACO,QAAQ,CAACP,CAAC,CAACgB,MAAM;EAC9B,CAAC;AACH,CAAC;;AAED;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACAf,OAAO,CAACgB,cAAc,GAAG;EACvBd,GAAG,EAAE,mDAAmD;EACxDC,SAAS,EAAEJ,CAAC,CAACkB,OAAO,CAAC,CACnBlB,CAAC,CAACmB,2BAA2B,CAAC,CAAC,UAAU,EAAE,QAAQ,CAAC,CAAC,EACrDnB,CAAC,CAACmB,2BAA2B,CAAC,CAAC,UAAU,EAAE,aAAa,CAAC,CAAC,EAC1DnB,CAAC,CAACmB,2BAA2B,CAAC,CAAC,UAAU,EAAE,eAAe,CAAC,CAAC,EAC5DnB,CAAC,CAACK,MAAM,CAAC;IACPe,MAAM,EAAEpB,CAAC,CAACO,QAAQ,CAACT,KAAK,CAACuB,MAAM,CAAC;IAChCC,QAAQ,EAAEtB,CAAC,CAACO,QAAQ,CAACP,CAAC,CAACQ,MAAM,CAAC;IAC9Be,WAAW,EAAEvB,CAAC,CAACO,QAAQ,CAACT,KAAK,CAAC0B,OAAO,CAACxB,CAAC,CAACQ,MAAM,CAAC,CAAC;IAChDiB,aAAa,EAAEzB,CAAC,CAACO,QAAQ,CAACT,KAAK,CAAC0B,OAAO,CAACxB,CAAC,CAAC0B,KAAK,CAAC,CAC9C,SAAS,EAAE,oBAAoB,EAAE,kBAAkB,EAAE,aAAa,CACnE,CAAC,CAAC,CAAC;IACJb,QAAQ,EAAEb,CAAC,CAACO,QAAQ,CAACP,CAAC,CAACQ,MAAM,CAAC;IAC9BM,YAAY,EAAEd,CAAC,CAACO,QAAQ,CAACT,KAAK,CAACgB,YAAY,CAAC;IAC5CC,OAAO,EAAEf,CAAC,CAACO,QAAQ,CAACP,CAAC,CAACgB,MAAM;EAC9B,CAAC,CAAC,CACH;AACH,CAAC"},"metadata":{},"sourceType":"script","externalDependencies":[]}