{"ast":null,"code":"/**\n * @license\n * Copyright 2018 Google Inc. All Rights Reserved.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */;\nconst {\n  v4: uuidv4\n} = require('uuid');\n\n/**\n * Polyline encodes an array of LatLng objects.\n *\n * See {@link https://developers.google.com/maps/documentation/utilities/polylinealgorithm}\n *\n * @memberof! module:@google/maps\n * @name module:@google/maps.util.encodePath\n * @function\n * @param {LatLng[]} path\n * @return {string}\n */\nexports.encodePath = function (path) {\n  var result = [];\n  var start = [0, 0];\n  var end;\n  var encodePart = function (part) {\n    part = part < 0 ? ~(part << 1) : part << 1;\n    while (part >= 0x20) {\n      result.push(String.fromCharCode((0x20 | part & 0x1f) + 63));\n      part >>= 5;\n    }\n    result.push(String.fromCharCode(part + 63));\n  };\n  for (var i = 0, I = path.length || 0; i < I; ++i) {\n    end = [Math.round(path[i].lat * 1e5), Math.round(path[i].lng * 1e5)];\n    encodePart(end[0] - start[0]); // lat\n    encodePart(end[1] - start[1]); // lng\n    start = end;\n  }\n  return result.join('');\n};\n\n/**\n * Decodes a polyline encoded string.\n *\n * See {@link https://developers.google.com/maps/documentation/utilities/polylinealgorithm}\n *\n * @memberof! module:@google/maps\n * @name module:@google/maps.util.decodePath\n * @function\n * @param {string} path\n * @return {LatLng[]}\n */\nexports.decodePath = function (encodedPath) {\n  var len = encodedPath.length || 0;\n  var path = new Array(Math.floor(encodedPath.length / 2));\n  var index = 0;\n  var lat = 0;\n  var lng = 0;\n  for (var pointIndex = 0; index < len; ++pointIndex) {\n    var result = 1;\n    var shift = 0;\n    var b;\n    do {\n      b = encodedPath.charCodeAt(index++) - 63 - 1;\n      result += b << shift;\n      shift += 5;\n    } while (b >= 0x1f);\n    lat += result & 1 ? ~(result >> 1) : result >> 1;\n    result = 1;\n    shift = 0;\n    do {\n      b = encodedPath.charCodeAt(index++) - 63 - 1;\n      result += b << shift;\n      shift += 5;\n    } while (b >= 0x1f);\n    lng += result & 1 ? ~(result >> 1) : result >> 1;\n    path[pointIndex] = {\n      lat: lat * 1e-5,\n      lng: lng * 1e-5\n    };\n  }\n  path.length = pointIndex;\n  return path;\n};\nexports.placesAutoCompleteSessionToken = uuidv4;","map":{"version":3,"names":["v4","uuidv4","require","exports","encodePath","path","result","start","end","encodePart","part","push","String","fromCharCode","i","I","length","Math","round","lat","lng","join","decodePath","encodedPath","len","Array","floor","index","pointIndex","shift","b","charCodeAt","placesAutoCompleteSessionToken"],"sources":["/home/vanshgoel/Downloads/ecohealth-react/node_modules/.pnpm/@google+maps@1.1.3/node_modules/@google/maps/lib/util.js"],"sourcesContent":["/**\n * @license\n * Copyright 2018 Google Inc. All Rights Reserved.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */;\n\nconst { v4: uuidv4 } = require('uuid');\n\n/**\n * Polyline encodes an array of LatLng objects.\n *\n * See {@link https://developers.google.com/maps/documentation/utilities/polylinealgorithm}\n *\n * @memberof! module:@google/maps\n * @name module:@google/maps.util.encodePath\n * @function\n * @param {LatLng[]} path\n * @return {string}\n */\nexports.encodePath = function(path) {\n\n  var result = [];\n  var start = [0, 0];\n  var end;\n\n  var encodePart = function(part) {\n    part = part < 0 ? ~(part << 1) : (part << 1);\n    while (part >= 0x20) {\n      result.push(String.fromCharCode((0x20 | (part & 0x1f)) + 63));\n      part >>= 5;\n    }\n    result.push(String.fromCharCode(part + 63));\n  };\n\n  for (var i = 0, I = path.length || 0; i < I; ++i) {\n    end = [Math.round(path[i].lat * 1e5), Math.round(path[i].lng * 1e5)];\n    encodePart(end[0] - start[0]);  // lat\n    encodePart(end[1] - start[1]);  // lng\n    start = end;\n  }\n\n  return result.join('');\n}\n\n/**\n * Decodes a polyline encoded string.\n *\n * See {@link https://developers.google.com/maps/documentation/utilities/polylinealgorithm}\n *\n * @memberof! module:@google/maps\n * @name module:@google/maps.util.decodePath\n * @function\n * @param {string} path\n * @return {LatLng[]}\n */\nexports.decodePath = function(encodedPath) {\n\n  var len = encodedPath.length || 0;\n  var path = new Array(Math.floor(encodedPath.length / 2));\n  var index = 0;\n  var lat = 0;\n  var lng = 0;\n\n  for (var pointIndex = 0; index < len; ++pointIndex) {\n    var result = 1;\n    var shift = 0;\n    var b;\n    do {\n      b = encodedPath.charCodeAt(index++) - 63 - 1;\n      result += b << shift;\n      shift += 5;\n    } while (b >= 0x1f);\n    lat += ((result & 1) ? ~(result >> 1) : (result >> 1));\n\n    result = 1;\n    shift = 0;\n    do {\n      b = encodedPath.charCodeAt(index++) - 63 - 1;\n      result += b << shift;\n      shift += 5;\n    } while (b >= 0x1f);\n    lng += ((result & 1) ? ~(result >> 1) : (result >> 1));\n\n    path[pointIndex] = {lat: lat * 1e-5, lng: lng * 1e-5};\n  }\n  path.length = pointIndex;\n\n  return path;\n};\n\nexports.placesAutoCompleteSessionToken = uuidv4;\n"],"mappings":"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"},"metadata":{},"sourceType":"script","externalDependencies":[]}