{"ast":null,"code":"/**\n * @license\n * Copyright 2016 Google Inc. All Rights Reserved.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nvar https = require('https');\nvar parse = require('url').parse;\nvar version = require('../version');\nvar HttpsProxyAgent = require('https-proxy-agent');\n\n// add keep-alive header to speed up request\nvar agent = new https.Agent({\n  keepAlive: true\n});\n\n/**\n * Makes a secure HTTP GET request for the given URL.\n *\n * Calls the callback with two parameters (err, response). If there was an\n * error, response should be null. If there was no error, err should be null,\n * and response should be an object with these properties\n * {\n *   status: number,\n *   headers: Object,\n *   json: Object\n * }\n *\n * Returns a function that cancels the request.\n *\n * @param {string} url\n * @param {function(ClientResponse)} onSuccess\n * @param {function(?)} onError\n * @param {Object} options\n * @return {function()}\n */\nmodule.exports = function makeUrlRequest(url, onSuccess, onError, options) {\n  var requestOptions = parse(url);\n  var body;\n\n  // Allow each API to provide some of the request options such as the\n  // HTTP method, headers, etc.\n  if (options) {\n    for (var k in options) {\n      if (k === 'body') {\n        body = options[k];\n      } else {\n        requestOptions[k] = options[k];\n      }\n    }\n  }\n  requestOptions.headers = requestOptions.headers || {};\n  requestOptions.headers['User-Agent'] = 'GoogleGeoApiClientJS/' + version;\n\n  // HTTP/HTTPS proxy to connect from within the enterprise/corporate network\n  var proxy = process.env.http_proxy || process.env.https_proxy;\n  if (proxy) {\n    // create an instance of the `HttpsProxyAgent` class with the proxy server information\n    var proxyAgent = new HttpsProxyAgent(proxy);\n    requestOptions.agent = proxyAgent;\n  }\n  var request = https.request(requestOptions, function (response) {\n    response.on('error', function (error) {\n      onError(error);\n    });\n    if (response.statusCode === 302) {\n      // Handle redirect.\n      var url = response.headers['location'];\n      makeUrlRequest(url, onSuccess, onError, options);\n    } else if (response.headers['content-type'].toLowerCase() == 'application/json; charset=utf-8') {\n      // Handle JSON.\n      var data = [];\n      response.on('data', function (chunk) {\n        data.push(chunk);\n      });\n      response.on('end', function () {\n        var json;\n        try {\n          json = JSON.parse(Buffer.concat(data).toString());\n        } catch (error) {\n          onError(error);\n          return;\n        }\n        onSuccess({\n          status: response.statusCode,\n          headers: response.headers,\n          json: json\n        });\n      });\n    } else {\n      // Fallback is for binary data, namely places photo download,\n      // so just provide the response stream. Also provide the same\n      // consistent name for status checking as per JSON responses.\n      response.status = response.statusCode;\n      onSuccess(response);\n    }\n  }).on('error', function (error) {\n    onError(error);\n  });\n  if (body) {\n    request.write(JSON.stringify(body));\n  }\n  request.end();\n  return function cancel() {\n    request.abort();\n  };\n};","map":{"version":3,"names":["https","require","parse","version","HttpsProxyAgent","agent","Agent","keepAlive","module","exports","makeUrlRequest","url","onSuccess","onError","options","requestOptions","body","k","headers","proxy","process","env","http_proxy","https_proxy","proxyAgent","request","response","on","error","statusCode","toLowerCase","data","chunk","push","json","JSON","Buffer","concat","toString","status","write","stringify","end","cancel","abort"],"sources":["/home/vanshgoel/Downloads/ecohealth-react/node_modules/.pnpm/@google+maps@1.1.3/node_modules/@google/maps/lib/internal/make-url-request.js"],"sourcesContent":["/**\n * @license\n * Copyright 2016 Google Inc. All Rights Reserved.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nvar https = require('https');\nvar parse = require('url').parse;\nvar version = require('../version');\nvar HttpsProxyAgent = require('https-proxy-agent');\n\n// add keep-alive header to speed up request\nvar agent = new https.Agent({ keepAlive: true });\n\n\n/**\n * Makes a secure HTTP GET request for the given URL.\n *\n * Calls the callback with two parameters (err, response). If there was an\n * error, response should be null. If there was no error, err should be null,\n * and response should be an object with these properties\n * {\n *   status: number,\n *   headers: Object,\n *   json: Object\n * }\n *\n * Returns a function that cancels the request.\n *\n * @param {string} url\n * @param {function(ClientResponse)} onSuccess\n * @param {function(?)} onError\n * @param {Object} options\n * @return {function()}\n */\nmodule.exports = function makeUrlRequest(url, onSuccess, onError, options) {\n\n  var requestOptions = parse(url);\n  var body;\n\n  // Allow each API to provide some of the request options such as the\n  // HTTP method, headers, etc.\n  if (options) {\n    for (var k in options) {\n      if (k === 'body') {\n        body = options[k];\n      } else {\n        requestOptions[k] = options[k];\n      }\n    }\n  }\n\n  requestOptions.headers = requestOptions.headers || {};\n  requestOptions.headers['User-Agent'] = 'GoogleGeoApiClientJS/' + version;\n\n  // HTTP/HTTPS proxy to connect from within the enterprise/corporate network\n  var proxy = process.env.http_proxy || process.env.https_proxy\n\n  if (proxy) {\n    // create an instance of the `HttpsProxyAgent` class with the proxy server information\n    var proxyAgent = new HttpsProxyAgent(proxy)\n    requestOptions.agent = proxyAgent\n  }\n\n  var request = https.request(requestOptions, function (response) {\n\n    response.on('error', function (error) {\n      onError(error);\n    });\n\n    if (response.statusCode === 302) {\n      // Handle redirect.\n      var url = response.headers['location'];\n      makeUrlRequest(url, onSuccess, onError, options);\n    } else if (response.headers['content-type'].toLowerCase() == 'application/json; charset=utf-8') {\n      // Handle JSON.\n      var data = [];\n      response.on('data', function (chunk) {\n        data.push(chunk);\n      });\n      response.on('end', function () {\n        var json;\n        try {\n          json = JSON.parse(Buffer.concat(data).toString());\n        } catch (error) {\n          onError(error);\n          return;\n        }\n        onSuccess({\n          status: response.statusCode,\n          headers: response.headers,\n          json: json\n        })\n      });\n    } else {\n      // Fallback is for binary data, namely places photo download,\n      // so just provide the response stream. Also provide the same\n      // consistent name for status checking as per JSON responses.\n      response.status = response.statusCode;\n      onSuccess(response);\n    }\n\n  }).on('error', function (error) {\n    onError(error);\n  });\n\n  if (body) {\n    request.write(JSON.stringify(body));\n  }\n\n  request.end();\n\n  return function cancel() { request.abort(); };\n};\n"],"mappings":"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"},"metadata":{},"sourceType":"script","externalDependencies":[]}