{"ast":null,"code":"/**\n * @license\n * Copyright 2016 Google Inc. All Rights Reserved.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */;\nvar utils = require('../internal/convert');\nvar v = require('../internal/validate');\n\n/**\n * Makes a directions request.\n *\n * @memberof! GoogleMapsClient\n * @name GoogleMapsClient.directions\n * @function\n * @param {Object} query\n * @param {LatLng} query.origin\n * @param {LatLng} query.destination\n * @param {string} [query.mode]\n * @param {LatLng[]} [query.waypoints]\n * @param {boolean} [query.alternatives]\n * @param {string[]} [query.avoid]\n * @param {string} [query.language]\n * @param {string} [query.units]\n * @param {string} [query.region]\n * @param {Date|number} [query.departure_time]\n * @param {Date|number} [query.arrival_time]\n * @param {string} [query.traffic_model]\n * @param {string[]} [query.transit_mode]\n * @param {string} [query.transit_routing_preference]\n * @param {boolean} [query.optimize]\n * @param {ResponseCallback} callback Callback function for handling the result\n * @return {RequestHandle}\n */\nexports.directions = {\n  url: 'https://maps.googleapis.com/maps/api/directions/json',\n  validator: v.compose([v.mutuallyExclusiveProperties(['arrival_time', 'departure_time']), v.object({\n    origin: utils.latLng,\n    destination: utils.latLng,\n    mode: v.optional(v.oneOf(['driving', 'walking', 'bicycling', 'transit'])),\n    waypoints: v.optional(utils.arrayOf(utils.latLng)),\n    alternatives: v.optional(v.boolean),\n    avoid: v.optional(utils.arrayOf(v.oneOf(['tolls', 'highways', 'ferries', 'indoor']))),\n    language: v.optional(v.string),\n    units: v.optional(v.oneOf(['metric', 'imperial'])),\n    region: v.optional(v.string),\n    departure_time: v.optional(utils.timeStamp),\n    arrival_time: v.optional(utils.timeStamp),\n    traffic_model: v.optional(v.oneOf(['best_guess', 'pessimistic', 'optimistic'])),\n    transit_mode: v.optional(utils.arrayOf(v.oneOf(['bus', 'subway', 'train', 'tram', 'rail']))),\n    transit_routing_preference: v.optional(v.oneOf(['less_walking', 'fewer_transfers'])),\n    optimize: v.optional(v.boolean),\n    retryOptions: v.optional(utils.retryOptions),\n    timeout: v.optional(v.number)\n  }), function (query) {\n    if (query.waypoints && query.optimize) {\n      query.waypoints = 'optimize:true|' + query.waypoints;\n    }\n    delete query.optimize;\n    if (query.waypoints && query.mode === 'transit') {\n      throw new v.InvalidValueError('cannot specify waypoints with transit');\n    }\n    if (query.traffic_model && !query.departure_time) {\n      throw new v.InvalidValueError('traffic_model requires departure_time');\n    }\n    return query;\n  }])\n};","map":{"version":3,"names":["utils","require","v","exports","directions","url","validator","compose","mutuallyExclusiveProperties","object","origin","latLng","destination","mode","optional","oneOf","waypoints","arrayOf","alternatives","boolean","avoid","language","string","units","region","departure_time","timeStamp","arrival_time","traffic_model","transit_mode","transit_routing_preference","optimize","retryOptions","timeout","number","query","InvalidValueError"],"sources":["/home/vanshgoel/Downloads/ecohealth-react/node_modules/.pnpm/@google+maps@1.1.3/node_modules/@google/maps/lib/apis/directions.js"],"sourcesContent":["/**\n * @license\n * Copyright 2016 Google Inc. All Rights Reserved.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */;\n\nvar utils = require('../internal/convert');\nvar v = require('../internal/validate');\n\n/**\n * Makes a directions request.\n *\n * @memberof! GoogleMapsClient\n * @name GoogleMapsClient.directions\n * @function\n * @param {Object} query\n * @param {LatLng} query.origin\n * @param {LatLng} query.destination\n * @param {string} [query.mode]\n * @param {LatLng[]} [query.waypoints]\n * @param {boolean} [query.alternatives]\n * @param {string[]} [query.avoid]\n * @param {string} [query.language]\n * @param {string} [query.units]\n * @param {string} [query.region]\n * @param {Date|number} [query.departure_time]\n * @param {Date|number} [query.arrival_time]\n * @param {string} [query.traffic_model]\n * @param {string[]} [query.transit_mode]\n * @param {string} [query.transit_routing_preference]\n * @param {boolean} [query.optimize]\n * @param {ResponseCallback} callback Callback function for handling the result\n * @return {RequestHandle}\n */\nexports.directions = {\n  url: 'https://maps.googleapis.com/maps/api/directions/json',\n  validator: v.compose([\n    v.mutuallyExclusiveProperties(['arrival_time', 'departure_time']),\n    v.object({\n      origin: utils.latLng,\n      destination: utils.latLng,\n      mode: v.optional(v.oneOf([\n        'driving', 'walking', 'bicycling', 'transit'\n      ])),\n      waypoints: v.optional(utils.arrayOf(utils.latLng)),\n      alternatives: v.optional(v.boolean),\n      avoid: v.optional(utils.arrayOf(v.oneOf([\n        'tolls', 'highways', 'ferries', 'indoor'\n      ]))),\n      language: v.optional(v.string),\n      units: v.optional(v.oneOf(['metric', 'imperial'])),\n      region: v.optional(v.string),\n      departure_time: v.optional(utils.timeStamp),\n      arrival_time: v.optional(utils.timeStamp),\n      traffic_model: v.optional(v.oneOf([\n        'best_guess', 'pessimistic', 'optimistic'\n      ])),\n      transit_mode: v.optional(utils.arrayOf(v.oneOf([\n        'bus', 'subway', 'train', 'tram', 'rail'\n      ]))),\n      transit_routing_preference: v.optional(v.oneOf([\n        'less_walking', 'fewer_transfers'\n      ])),\n      optimize: v.optional(v.boolean),\n      retryOptions: v.optional(utils.retryOptions),\n      timeout: v.optional(v.number)\n    }),\n    function(query) {\n      if (query.waypoints && query.optimize) {\n        query.waypoints = 'optimize:true|' + query.waypoints;\n      }\n      delete query.optimize;\n\n      if (query.waypoints && query.mode === 'transit') {\n        throw new v.InvalidValueError('cannot specify waypoints with transit');\n      }\n\n      if (query.traffic_model && !query.departure_time) {\n        throw new v.InvalidValueError('traffic_model requires departure_time');\n      }\n      return query;\n    }\n  ])\n};\n"],"mappings":"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"},"metadata":{},"sourceType":"script","externalDependencies":[]}