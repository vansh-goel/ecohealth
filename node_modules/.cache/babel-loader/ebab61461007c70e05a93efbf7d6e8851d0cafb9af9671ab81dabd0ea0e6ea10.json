{"ast":null,"code":"var _jsxFileName = \"/home/vanshgoel/Downloads/ecohealth-react/src/views/map.js\";\n// MapContainer.js\nimport React, { Component } from 'react';\nimport { Map, GoogleApiWrapper, Marker } from 'google-maps-react';\nimport axios from 'axios';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nclass MapContainer extends Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      greenspaces: []\n    };\n    this.searchGreenspaces = () => {\n      const {\n        google\n      } = this.props;\n      const service = new google.maps.places.PlacesService(document.createElement('div'));\n      service.textSearch({\n        query: 'Greenspaces in Atlanta',\n        location: new google.maps.LatLng({\n          lat: 33.7490,\n          lng: -84.3880\n        }),\n        radius: 5000 // Search within a 5km radius (adjust as needed)\n      }, (results, status) => {\n        if (status === google.maps.places.PlacesServiceStatus.OK) {\n          this.setState({\n            greenspaces: results\n          });\n        }\n      });\n    };\n  }\n  componentDidMount() {\n    this.searchGreenspaces();\n  }\n  render() {\n    const {\n      google\n    } = this.props;\n    const {\n      greenspaces\n    } = this.state;\n    return /*#__PURE__*/_jsxDEV(Map, {\n      google: google,\n      zoom: 10,\n      initialCenter: {\n        lat: 33.7490,\n        lng: -84.3880\n      },\n      children: greenspaces.map(place => /*#__PURE__*/_jsxDEV(Marker, {\n        position: {\n          lat: place.geometry.location.lat(),\n          lng: place.geometry.location.lng()\n        },\n        name: place.name\n      }, place.place_id, false, {\n        fileName: _jsxFileName,\n        lineNumber: 49,\n        columnNumber: 11\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 40,\n      columnNumber: 7\n    }, this);\n  }\n}\nexport default GoogleApiWrapper({\n  apiKey: 'AIzaSyDKnPQXQqgwlThYL2om8dykd12QHd6d9gY'\n})(MapContainer);","map":{"version":3,"names":["React","Component","Map","GoogleApiWrapper","Marker","axios","jsxDEV","_jsxDEV","MapContainer","constructor","args","state","greenspaces","searchGreenspaces","google","props","service","maps","places","PlacesService","document","createElement","textSearch","query","location","LatLng","lat","lng","radius","results","status","PlacesServiceStatus","OK","setState","componentDidMount","render","zoom","initialCenter","children","map","place","position","geometry","name","place_id","fileName","_jsxFileName","lineNumber","columnNumber","apiKey"],"sources":["/home/vanshgoel/Downloads/ecohealth-react/src/views/map.js"],"sourcesContent":["// MapContainer.js\nimport React, { Component } from 'react';\nimport { Map, GoogleApiWrapper, Marker } from 'google-maps-react';\nimport axios from 'axios';\n\nclass MapContainer extends Component {\n  state = {\n    greenspaces: [],\n  };\n\n  componentDidMount() {\n    this.searchGreenspaces();\n  }\n\n  searchGreenspaces = () => {\n    const { google } = this.props;\n    const service = new google.maps.places.PlacesService(\n      document.createElement('div')\n    );\n\n    service.textSearch(\n      {\n        query: 'Greenspaces in Atlanta',\n        location: new google.maps.LatLng({ lat: 33.7490, lng: -84.3880 }),\n        radius: 5000, // Search within a 5km radius (adjust as needed)\n      },\n      (results, status) => {\n        if (status === google.maps.places.PlacesServiceStatus.OK) {\n          this.setState({ greenspaces: results });\n        }\n      }\n    );\n  };\n\n  render() {\n    const { google } = this.props;\n    const { greenspaces } = this.state;\n\n    return (\n      <Map\n        google={google}\n        zoom={10}\n        initialCenter={{\n          lat: 33.7490,\n          lng: -84.3880,\n        }}\n      >\n        {greenspaces.map((place) => (\n          <Marker\n            key={place.place_id}\n            position={{\n              lat: place.geometry.location.lat(),\n              lng: place.geometry.location.lng(),\n            }}\n            name={place.name}\n          />\n        ))}\n      </Map>\n    );\n  }\n}\n\nexport default GoogleApiWrapper({\n  apiKey: 'AIzaSyDKnPQXQqgwlThYL2om8dykd12QHd6d9gY',\n})(MapContainer);\n"],"mappings":";AAAA;AACA,OAAOA,KAAK,IAAIC,SAAS,QAAQ,OAAO;AACxC,SAASC,GAAG,EAAEC,gBAAgB,EAAEC,MAAM,QAAQ,mBAAmB;AACjE,OAAOC,KAAK,MAAM,OAAO;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAE1B,MAAMC,YAAY,SAASP,SAAS,CAAC;EAAAQ,YAAA,GAAAC,IAAA;IAAA,SAAAA,IAAA;IAAA,KACnCC,KAAK,GAAG;MACNC,WAAW,EAAE;IACf,CAAC;IAAA,KAMDC,iBAAiB,GAAG,MAAM;MACxB,MAAM;QAAEC;MAAO,CAAC,GAAG,IAAI,CAACC,KAAK;MAC7B,MAAMC,OAAO,GAAG,IAAIF,MAAM,CAACG,IAAI,CAACC,MAAM,CAACC,aAAa,CAClDC,QAAQ,CAACC,aAAa,CAAC,KAAK,CAC9B,CAAC;MAEDL,OAAO,CAACM,UAAU,CAChB;QACEC,KAAK,EAAE,wBAAwB;QAC/BC,QAAQ,EAAE,IAAIV,MAAM,CAACG,IAAI,CAACQ,MAAM,CAAC;UAAEC,GAAG,EAAE,OAAO;UAAEC,GAAG,EAAE,CAAC;QAAQ,CAAC,CAAC;QACjEC,MAAM,EAAE,IAAI,CAAE;MAChB,CAAC,EACD,CAACC,OAAO,EAAEC,MAAM,KAAK;QACnB,IAAIA,MAAM,KAAKhB,MAAM,CAACG,IAAI,CAACC,MAAM,CAACa,mBAAmB,CAACC,EAAE,EAAE;UACxD,IAAI,CAACC,QAAQ,CAAC;YAAErB,WAAW,EAAEiB;UAAQ,CAAC,CAAC;QACzC;MACF,CACF,CAAC;IACH,CAAC;EAAA;EAtBDK,iBAAiBA,CAAA,EAAG;IAClB,IAAI,CAACrB,iBAAiB,CAAC,CAAC;EAC1B;EAsBAsB,MAAMA,CAAA,EAAG;IACP,MAAM;MAAErB;IAAO,CAAC,GAAG,IAAI,CAACC,KAAK;IAC7B,MAAM;MAAEH;IAAY,CAAC,GAAG,IAAI,CAACD,KAAK;IAElC,oBACEJ,OAAA,CAACL,GAAG;MACFY,MAAM,EAAEA,MAAO;MACfsB,IAAI,EAAE,EAAG;MACTC,aAAa,EAAE;QACbX,GAAG,EAAE,OAAO;QACZC,GAAG,EAAE,CAAC;MACR,CAAE;MAAAW,QAAA,EAED1B,WAAW,CAAC2B,GAAG,CAAEC,KAAK,iBACrBjC,OAAA,CAACH,MAAM;QAELqC,QAAQ,EAAE;UACRf,GAAG,EAAEc,KAAK,CAACE,QAAQ,CAAClB,QAAQ,CAACE,GAAG,CAAC,CAAC;UAClCC,GAAG,EAAEa,KAAK,CAACE,QAAQ,CAAClB,QAAQ,CAACG,GAAG,CAAC;QACnC,CAAE;QACFgB,IAAI,EAAEH,KAAK,CAACG;MAAK,GALZH,KAAK,CAACI,QAAQ;QAAAC,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAMpB,CACF;IAAC;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACC,CAAC;EAEV;AACF;AAEA,eAAe7C,gBAAgB,CAAC;EAC9B8C,MAAM,EAAE;AACV,CAAC,CAAC,CAACzC,YAAY,CAAC"},"metadata":{},"sourceType":"module","externalDependencies":[]}